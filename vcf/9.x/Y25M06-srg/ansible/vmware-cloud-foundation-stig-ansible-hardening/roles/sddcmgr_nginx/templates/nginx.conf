error_log /var/log/nginx/error.log info;

events {
    worker_connections  1024;
}

http {
    limit_conn_zone $server_name zone=per_server:10m;
    limit_conn per_server 1000;
    limit_conn_zone $binary_remote_addr zone=per_ip:10m;
    limit_conn per_ip 100;
    limit_req_zone $binary_remote_addr zone=api_traffic:10m rate=5000r/s;
    limit_req_zone $binary_remote_addr zone=ui_traffic:10m rate=1000r/s;
    limit_req_zone $binary_remote_addr zone=ui_file_upload:10m rate=1r/s;
    map_hash_bucket_size 128;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    proxy_cookie_path / "/; HTTPOnly; Secure";
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#server_tokens
    server_tokens off;
    ssi off;
    # fields $remote_addr to $http_user_agent(inclusive) follow https://en.wikipedia.org/wiki/Common_Log_Format: do not change
    log_format custom '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" $request_time $upstream_response_time';
    access_log /var/log/nginx/access.log custom;

    server {
        # make http port 80 local only
        server_name localhost;
        listen 127.0.0.1:80 default_server;
        listen [::1]:80 default_server;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options nosniff;
        # STIG Compliance
        add_header Referrer-Policy "no-referrer";
        add_header Content-Security-Policy "default-src 'self';";

        # prevent HTTP Smuggling
        chunked_transfer_encoding off;

        # enable the following 2 lines to show rewrite logging in the error
        # http error log
        # error_log /var/log/nginx/http.error.log notice;
        # access_log /var/log/nginx/http.access.log;
        # rewrite_log on;

        # proxied /ui/api requests that are redirected to localhost from https block
        # will have /ui/api still attached

        location /nginx_status {
            stub_status;
        }

        # commonsvcs `features/list` endpoint does not include 'commonsvcs' in url unlike other commonsvcs apis
        location /commonsvcs/features/list {
            # internal mapping (about, et al)
            proxy_pass http://127.0.0.1:7100/features/list;
        }

        # FIPS status v1 public APIs
        location = /v1/system/security/fips  {
            proxy_pass http://127.0.0.1:7100/v1/system/security/fips;
        }

        # Set body size limit to 1G for assessment APIs
        location /operationsmanager/assessment {
            client_max_body_size 1g;
            proxy_pass http://127.0.0.1:7300/operationsmanager/assessment;
        }

        # Proxy configuration v1 public APIs
        location ~ ^/v1/system/proxy-configuration(.*) {
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/proxy-configuration$1$2$is_args$args;
        }

        location /commonsvcs/ {
            # internal mapping (about, et al)
            proxy_pass http://127.0.0.1:7100;
        }

        location = /appliancemanager/security/passwords {
            # redirect to 443 because basic auth is mandatory for this endpoint
            return 301 https://$host$request_uri;
        }

        location ~ ^/v1/vsan-hcl/content {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            client_max_body_size 40M;
            limit_conn per_ip 1;

            proxy_pass http://127.0.0.1:7400/v1/vsan-hcl/content/$is_args$args;
        }
        location ~ ^/v1/vsan-hcl/file {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            client_max_body_size 40M;
            limit_conn per_ip 1;

            proxy_pass http://127.0.0.1:7400/v1/vsan-hcl/file/$is_args$args;
        }

        location ~ ^/appliancemanager/ssh/knownHosts(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            client_max_body_size 5m;
            proxy_pass http://127.0.0.1:7100/appliancemanager/ssh/knownHosts$1$2$is_args$args;
        }

        location ~ ^/(appliancemanager|dns|inventory|locks|task-types|networkpools|tasks|workflows|resource-topologies|resource-locks)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7100/$1$2$is_args$args;
            client_max_body_size 50m;
        }
        location ~ ^/(identity)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7100/$1$2$is_args$args;
        }
        location ~ ^/(compliance)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7100/$1$2$is_args$args;
        }
        location ~ ^/(policies)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7300/operationsmanager/$1$2$is_args$args;
        }
        location ~ /v1/sddc-manager/upgradables(.*) {
            proxy_pass http://127.0.0.1:7400/v1/sddc-manager/upgradables$is_args$args;
        }
        location  ~ ^/v1/(vcenters/repository-images)(.*) {
            proxy_pass http://127.0.0.1:7400/v1/$1$2$is_args$args;
        }
        location  ~ ^/v1/(tasks|network-pool|address-attributes|pscs|vxrail-managers|vcenters|sddc-managers|nsx-managers|vcf-services|users|roles|tokens|sso-domains|sddc-manager|securitySettings|identity-providers|resource-warnings|resource-functionalities|identity-broker|current-user|compliance|resource-locks|css)(.*) {
            proxy_pass http://127.0.0.1:7100/v1/$1$2$is_args$args;
        }
        location ~ ^/v1/(inventory)(.*) {
            client_max_body_size 100m;
            proxy_pass http://127.0.0.1:7100/v1/$1$2$is_args$args;
        }
        location ~ ^/v1/domains/([a-zA-Z0-9\-]+)/(compliance)(.*) {
            proxy_pass http://127.0.0.1:7100/v1/domains/$1/$2$3$is_args$args;
        }

        location ~ ^/cds/(.*) {
            proxy_pass http://127.0.0.1:5000/$1$is_args$args;
        }
        location  = /v1/certificate-management/certificate-bundle{
                    # auth_basic           "closed site";
                    # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/certificate-management/certificate-bundle;
        }
        location  = /v1/system/appliance-info{
                    # auth_basic           "closed site";
                    # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/system/appliance-info;
        }
        location  = /v1/system/vcf-management-components{
                    # auth_basic           "closed site";
                    # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/system/vcf-management-components;
        }
        location  = /v1/sddcs/appliance-info{
                    # auth_basic           "closed site";
                    # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/system/appliance-info;
        }
        location  = /v1/sddcs/installer-mode{
                    # auth_basic           "closed site";
                    # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7200/domainmanager/v1/sddcs/installer-mode;
        }
        location ~ ^/v1/system/credentials(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7100/v1/system/credentials$1$is_args$args;
        }
        # Public api v1 ceip http
        location ~ ^/v1/system/ceip(.*) {
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/ceip$1$is_args$args;
        }
        location ~ ^/v1/avns(.*) {
            proxy_pass http://127.0.0.1:7200/domainmanager/v1/avns$1$is_args$args;
        }
        location ~ ^/internal/avns(.*) {
            proxy_pass http://127.0.0.1:7100/internal/avns$1$is_args$args;
        }
        #Tags
        location ~ ^/v1/(domains|hosts|clusters)/([a-zA-Z0-9\-]+)/tags(.*) {
            proxy_pass http://127.0.0.1:7100/v1/tags/resources/$1/$2$3$is_args$args;
        }
        location ~ ^/v1/(domains|hosts|clusters)/tags(.*) {
            proxy_pass http://127.0.0.1:7100/v1/tags/resources/$1$2$is_args$args;
        }
        location ~ ^/v1/tags(.*) {
            proxy_pass http://127.0.0.1:7100/v1/tags$1$is_args$args;
        }
        location ~ ^/sos/(.*) {
            proxy_pass http://127.0.0.1:7600/$1$is_args$args;
        }

        # Events APIs
        location ~ ^/v1/events(.*) {
            proxy_pass http://127.0.0.1:7100/v1/events$1$is_args$args;
        }

        # SOS APIs, accessed without /sos
        location ~ ^/(backups|restores)(.*) {
            proxy_pass http://127.0.0.1:7600/$1$2$is_args$args;
        }
         # SOS v1 public APIs
        location  ~ ^/v1/system/(support-bundles|health-summary)(.*) {
           proxy_pass http://127.0.0.1:7600/v1/$1$2$is_args$args;
        }
        # certificate management v1 public APIs
        location ~ ^/v1/domains/([a-zA-Z0-9\-]+/)(certificates|csrs|resource-certificates|renew)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/domains/$1$2$3$is_args$args;
        }
        location ~ ^/v1/domains/resource-certificates(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7300/operationsmanager$request_uri;
        }
        # policy management v1 public APIs
        location ~ ^/v1/domains/([a-zA-Z0-9\-]+/)(policy)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/domains/$1$2$3$is_args$args;
        }
        # When FSM data is part of import, can be more than default 1mb size (http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size)
        # and to avoid failures due to this, bumping value to 50 mb.
        # It is a temporary solution.
        location ~ ^/domainmanager/(import|export)$ {
            client_max_body_size 50m;
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7200/domainmanager/$1$2$is_args$args;
        }
        location /domainmanager/ {
            # internal mapping (about, et al)
            proxy_pass http://127.0.0.1:7200;
        }
        # domainmanager APIs, accessed without /domainmanager
        location ~ ^/(hosts|clusters|vidomains|vrealize)(.*) {
            proxy_pass http://127.0.0.1:7200/domainmanager/$1$2$is_args$args;
        }
        location ~ ^/vxrail/(vcenters)(.*){
            proxy_pass http://127.0.0.1:7200/domainmanager/vxrail/$1$2$is_args$args;
        }

        location ~ ^/v1/personalities/files(.*) {

            client_max_body_size 2g;
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            limit_conn per_ip 1;
            limit_req zone=ui_file_upload;

            proxy_pass http://127.0.0.1:7400/v1/personalities/files$is_args$args;
        }

          # ntp-configuration v1 public APIs
        location ~ ^/v1/system/ntp-configuration(.*)  {
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/ntp-configuration$1$is_args$args;
        }
        # dns-configuration v1 public APIs
        location ~ ^/v1/system/dns-configuration(.*)  {
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/dns-configuration$1$is_args$args;
        }

        # vPAIF internal APIs
        location ~ ^/v1/system/vpaif-configuration(.*)  {
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/vpaif-configuration$1$is_args$args;
        }

        location ~ ^/v1/system/vpaif/task-publisher(.*)  {
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/vpaif/task-publisher$1$is_args$args;
        }

        # Supervisor internal APIs
        location ~ ^/v1/system/supervisor-configuration(.*)  {
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/supervisor-configuration$1$is_args$args;
        }

        # version-syncs v1 public APIs
        location ~ ^/v1/resources/version-syncs(.*)  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/resources/version-syncs$1$is_args$args;
        }

        # licensing-infos v1 public APIs
        location ~ ^/v1/resources/licensing-infos(.*)  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/resources/licensing-infos$1$is_args$args;
        }

        # license-checks v1 public APIs
        location ~ ^/v1/resources/license-checks(.*)  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/resources/license-checks$1$is_args$args;
        }

        # licensing-info v1 public APIs
        location ~ ^/v1/licensing-info(.*)  {
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/licensing-info$1$is_args$args;
        }

        location ~ ^/v1/custom-isos/file(.*) {
            client_max_body_size 1g; # This is an editable field, but make sure to set the max size to what is needed
            proxy_pass http://127.0.0.1:7400/v1/custom-isos/file$is_args$args;
        }

        location ~ ^/v1/compatibility-matrices(.*) {
            client_max_body_size 1g; # This is an editable field, but make sure to set the max size to what is needed
            proxy_pass http://127.0.0.1:7400/v1/compatibility-matrices$1$is_args$args;
        }

        # System v1 public API. Preserve the order w.r.t. lcm v1 public APIs
        location = /v1/system {
            proxy_pass http://127.0.0.1:7100/v1/system;
        }

        # defining this separately as the resource 'system' in the url is shared with lcm public APIs
        location = /v1/system/backup-configuration  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/backup-configuration;
        }
        location ~ ^/v1/system/backup-configuration/(validations|backup-locations)(.*)  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/backup-configuration/$1$2$is_args$args;
        }

        # lcm v1 public APIs
        location  ~ ^/v1/(bundles|product-binaries|upgradables|upgrades|system|personalities|product-version-catalog|product-version-catalogs|manifests|releases|custom-isos|vsan-hcl|cluster-images|compliant-versions|system-images|hosts/third-party-vibs)(.*) {
            proxy_pass http://127.0.0.1:7400/v1/$1$2$is_args$args;
        }

        location ~ ^/v1/domains/([a-zA-Z0-9\-]+)/health-checks(.*) {
            proxy_pass http://127.0.0.1:7400/v1/domains/$1/health-checks$2$is_args$args;
        }

        # domainmanager v1 public APIs
        location  ~ ^/v1/(domains|clusters|vrslcms|vcf-management-components|load-balancers|deployment-endpoint|nsx-alb-clusters|alb-clusters|edge-clusters|wcps|validation|nsxt-clusters|nsx-cluster|nsx-version|vasa-providers|config-drifts|config-drift-reconciliations|sddcs|installer)(.*) {
            proxy_pass http://127.0.0.1:7200/domainmanager/v1/$1$2$is_args$args;
        }

        location ~ ^/operationsmanager/(import|export)$ {
            client_max_body_size 50m;
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7300/operationsmanager/$1$2$is_args$args;
        }
        location /operationsmanager/ {
            # internal mapping (about, et al)
            proxy_pass http://127.0.0.1:7300;
        }

        # Certificates  APIs, accessed without /operationsmanager
        location  ~ ^/(security)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7300/operationsmanager/$1$2$is_args$args;
        }

        # operationsmanager APIs, accessed without /operationsmanager
        location  ~ ^/(ra|password|licensing|imaging|telemetry|events|system)(.*) {
            proxy_pass http://127.0.0.1:7300/operationsmanager/$1$2$is_args$args;
        }

        location = /hosts/commission/validate  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission/validate;
        }
        location = /hosts/commission/validate/spec  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission/validate/spec;
        }
        location = /hosts/commission/validate/status  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission/validate/status;
        }
        location = /hosts/commission/validate/result  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission/validate/result;
        }
        location = /hosts/commission  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission;
        }
        location = /hosts/commission/internal  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/commission/internal;
        }
        location = /hosts/decommission  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/decommission;
        }
        location = /hosts/image  {
            proxy_pass http://127.0.0.1:7300/operationsmanager/hosts/image;
        }

        # operationsmanager v1 public APIs
        location  ~ ^/v1/(backups|certificate-authorities|credentials|hosts|license-keys|notifications|policies|ra|server-certificates|service-accounts)(.*) {
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/$1$2$is_args$args;
        }

        # to trigger restores, the public api v1 is defined in operationsmanager
        # and the get api to get the progress is defined in sos
        location  ~ ^/v1/(restores)(.*) {
            #auth_basic           "closed site";
            #auth_basic_user_file /etc/nginx/.htpasswd;

            if ($request_method = POST ) {
              proxy_pass http://127.0.0.1:7300/operationsmanager/v1/$1$2$is_args$args;
            }

             if ($request_method = GET ) {
              proxy_pass http://127.0.0.1:7600/v1/$1$2$is_args$args;
            }
        }
        location /lcm/bundle/upload/partnerBundle/ {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7400;
        }
        location /lcm/depot/user {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;

            proxy_pass http://127.0.0.1:7400;
        }
        location /lcm/features/list  {
            proxy_pass http://127.0.0.1:7400/features/list;
        }
        location /lcm/ {
            proxy_pass http://127.0.0.1:7400;
        }
        location /sddc-manager-ui-app/ {
            # internal mapping (about, et al)
            proxy_pass http://127.0.0.1:7500;
        }

        # VIP location
        location ~ ^/vip/i18n(.*) {
            proxy_pass http://127.0.0.1:7900/$1$2$is_args$args;
        }

        # Internal SDDC APIs
        location ~ ^/v1/sddc(.*) {
            proxy_pass http://127.0.0.1:7200/domainmanager/v1/sddc$1$is_args$args;
        }
    }

    server {
        include /etc/nginx/mime.types;
        # enable the following 2 lines to show rewrite logging in the error
        # https error log
        # error_log /var/log/nginx/https.error.log notice;
        # access_log /var/log/nginx/https.access.log;
        # rewrite_log on;

        proxy_pass_request_headers on;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_redirect off;

        #server_name sddc-manager;
        #TODO: bind these to the public IP, BUT it is not fixed as 10.0.0.4,
        # so devise a way to edit this file when we install it. Perhaps using
        # a hostname that resolves would be the way to go? Test it out.
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        limit_conn per_ip 100;
        limit_conn per_server 100;
        limit_req zone=api_traffic burst=100 nodelay;

        # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
        ssl_certificate /etc/ssl/certs/vcf_https.crt;
        ssl_certificate_key /etc/ssl/private/vcf_https.key;
        ssl_session_timeout 5m; # STIG requirement
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:TLS_AES_128_GCM_SHA256:TLS_AES_128_CCM_8_SHA256:TLS_AES_128_CCM_SHA256:TLS_AES_256_GCM_SHA384';

        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        add_header Strict-Transport-Security max-age=15768000;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options nosniff;
        # STIG Compliance
        add_header Referrer-Policy "no-referrer";
        location /ui {

            # Enable gzip compression.
            gzip on;
            # Enables inserting the “Vary: Accept-Encoding” response header field if the directives gzip, gzip_static, or gunzip are active.
            gzip_vary on;
            # Enables gzipping of responses for proxied requests.
            gzip_proxied expired no-cache no-store private auth;
            # Enables gzipping of responses for the specified MIME types
            gzip_types text/plain text/css text/xml text/json text/javascript application/javascript application/json application/x-javascript application/xml;
            # Disables gzipping of responses for requests with “User-Agent” Microsoft Internet Explorer.
            gzip_disable "MSIE [1-6]\.";

            # UI server handles auth via PSC/SSO
            #NO: limit_req zone=ui_traffic;
            alias /opt/vmware/vcf/sddc-manager-ui-app/client/dist/client;

            # restrict the impact of the file size properties only to upload location
            location ^~ /ui/api/vrealize/vra/file_upload {
                client_max_body_size 0;
                proxy_read_timeout   600;
                limit_conn per_ip 1;
                limit_req zone=ui_file_upload;

                # UI server handles auth via PSC/SSO
                proxy_pass http://127.0.0.1:7500;
            }

            # restrict the impact of the file size properties only to upload location
            location ^~ /ui/api/file_upload {
                client_max_body_size 0;
                proxy_read_timeout   600;
                limit_conn per_ip 1;
                limit_req zone=ui_file_upload;

                # UI server handles auth via PSC/SSO
                proxy_pass http://127.0.0.1:7500;
            }

            # restrict the impact of the file size properties only to upload location
            location ^~ /ui/api/v1/personalities/files {
                client_max_body_size 2g;
                proxy_read_timeout   600;
                limit_conn per_ip 1;
                limit_req zone=ui_file_upload;

                # UI server handles auth via PSC/SSO
                proxy_pass http://127.0.0.1:7500;
            }

            location ^~ /ui/api/v1/custom-isos/file {
                client_max_body_size 1g; # This is an editable field, but make sure to set the max size to what is needed
                proxy_pass http://127.0.0.1:7500;
            }

            location ^~ /ui/api/v1/compatibility-matrices {
                client_max_body_size 1g; # This is an editable field, but make sure to set the max size to what is needed
                proxy_pass http://127.0.0.1:7500;
            }

            # increase timeout for identity/entities API request
            location ^~ /ui/api/identity/entities {
                proxy_read_timeout   600;
                proxy_connect_timeout   600;
                proxy_send_timeout   600;

                # UI server handles auth via PSC/SSO
                proxy_pass http://127.0.0.1:7500;
            }

            # increase timeout for security/certificates API request
           location ^~ /ui/api/security/certificates/sddc-domains {
               proxy_read_timeout   600;
               proxy_connect_timeout   600;
               proxy_send_timeout   600;

               # UI server handles auth via PSC/SSO
               proxy_pass http://127.0.0.1:7500;
            }

            # 'identity/permission' and 'privileges/loggedInUser' routes must flow through UI server to have
            # GROUP-INFO inserted into the request body
            location ~ /ui/.* {
                try_files $uri @sddc-manager-ui-app;
                break;
            }

        }

        # SDDC Manager UI Remote plugin for vSphere Client.
        location ^~ /plugin/ {

            # restrict the impact of the file size properties only to upload location
            location ^~ /plugin/api/vrealize/vra/file_upload {
                client_max_body_size 0;
                proxy_read_timeout   600;
                limit_conn per_ip 1;
                limit_req zone=ui_file_upload;

                # UI server handles auth via PSC/SSO
                proxy_pass http://127.0.0.1:7500;
            }

            # restrict the impact of the file size properties only to upload location
            location ^~ /plugin/api/file_upload {
                client_max_body_size 0;
                proxy_read_timeout   600;
                limit_conn per_ip 1;
                limit_req zone=ui_file_upload;

                # UI server handles auth via PSC/SSO
                proxy_pass http://127.0.0.1:7500;
            }

            # restrict the impact of the file size properties only to upload location
            location ^~ /plugin/api/v1/personalities/files {
                client_max_body_size 2g;
                proxy_read_timeout   600;
                limit_conn per_ip 1;
                limit_req zone=ui_file_upload;

                # UI server handles auth via PSC/SSO
                proxy_pass http://127.0.0.1:7500;
            }

            location ^~ /plugin/api/v1/custom-isos/file {
                client_max_body_size 1g; # This is an editable field, but make sure to set the max size to what is needed
                proxy_pass http://127.0.0.1:7500;
            }

            location ^~ /plugin/api/v1/compatibility-matrices {
                client_max_body_size 1g; # This is an editable field, but make sure to set the max size to what is needed
                proxy_pass http://127.0.0.1:7500;
            }

            # increase timeout for identity/entities API request
            location ^~ /plugin/api/identity/entities {
                proxy_read_timeout   600;
                proxy_connect_timeout   600;
                proxy_send_timeout   600;

                # UI server handles auth via PSC/SSO
                proxy_pass http://127.0.0.1:7500;
            }

            # increase timeout for security/certificates API request
            location ^~ /plugin/api/security/certificates/sddc-domains {
               proxy_read_timeout   600;
               proxy_connect_timeout   600;
               proxy_send_timeout   600;

               # UI server handles auth via PSC/SSO
               proxy_pass http://127.0.0.1:7500;
            }

            location ~ ^/plugin/api/(.*) {
                proxy_pass http://127.0.0.1:7500;
            }

            # Remote plugin for vSphere client
            location ^~ /plugin/vsc-plugin {
                alias /opt/vmware/vcf/sddc-manager-ui-app/client/dist/vsc-remote-plugin/;
                try_files $uri $uri/index.html index.html;
            }

            # Remote plugin for Ops console
            location ^~ /plugin/ops-plugin {
                alias /opt/vmware/vcf/sddc-manager-ui-app/client/dist/ops-remote-plugin/;
                try_files $uri $uri/index.html index.html;
            }

            # Root also hosts the manifests. Serve them if nothing matched.
            alias /opt/vmware/vcf/sddc-manager-ui-app/client/dist/manifests/;
        }

        # VCF Installer UI.
        location ~ ^/vcf-installer-ui/(.*) {
            alias /opt/vmware/vcf/sddc-manager-ui-app/vcf-installer-ui/;
            try_files $1 $1/ /index.html index.html;
        }

        location = /v1/system/appliance-info{
                    # auth_basic           "closed site";
                    # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/system/appliance-info;
        }

        location = /v1/system/vcf-management-components{
                    # auth_basic           "closed site";
                    # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/system/vcf-management-components;
        }

        # VIP location
        location ~ ^/vip(.*) {
            proxy_pass http://127.0.0.1/vip/i18n/$1$2$is_args$args;
        }

        # Enabling https access for install/update images in bundle repo
        location /vmware/vcf/ {
            alias /nfs/vmware/vcf/nfs-mount/;
            limit_except GET {
                deny all;
            }
        }

        location ~ ^/(inventory|identity|operationsmanager|domainmanager)/export {
            deny all;
        }

        location = /lcm/data/export {
            deny all;
        }

        location = /appliancemanager/security/serviceaccounts/internal {
            # redirect to 403 because this endpoint is forbidden outside of sddc manager
            return 403 https://$host$request_uri;
        }

        location ~* .(jpg|jpeg|png|gif|svg|css|js)$ {
            # sets cache-control & expires headers
            # http://nginx.org/en/docs/http/ngx_http_headers_module.html#expires
            expires max;
        }

        location @sddc-manager-ui-app {
            proxy_cookie_path off;
            proxy_pass http://127.0.0.1:7500;
        }

        location / {
            return 301 https://$host/ui;
        }

        # Public api v1 ceip https
        location ~ ^/v1/system/ceip(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/ceip$1$is_args$args;
        }

        location ~ /v1/sddc-manager/upgradables(.*) {
            proxy_pass http://127.0.0.1:7400/v1/sddc-manager/upgradables$is_args$args;
        }

        location  ~ ^/v1/(vcenters/repository-images)(.*) {
                    proxy_pass http://127.0.0.1:7400/v1/$1$2$is_args$args;
        }

        location  ~ ^/v1/(tasks|network-pools|address-attributes|pscs|vxrail-managers|vcenters|sddc-managers|nsx-managers|vcf-services|users|roles|tokens|sso-domains|sddc-manager|securitySettings|identity-providers|resource-warnings|resource-functionalities|current-user|compliance|resource-locks|css)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/$1$2$is_args$args;
        }
        location ~ ^/v1/(inventory)(.*) {
            client_max_body_size 100m;
            proxy_pass http://127.0.0.1:7100/v1/$1$2$is_args$args;
        }
        location ~ ^/v1/domains/([a-zA-Z0-9\-]+)/(compliance)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/domains/$1/$2$3$is_args$args;
        }
        location  ~ ^/v1/identity-broker/prechecks(.*) {
                    # auth_basic           "closed site";
                    # auth_basic_user_file /etc/nginx/.htpasswd;
                    proxy_pass http://127.0.0.1:7100/v1/identity-broker/prechecks$1$is_args$args;
        }
        location  = /v1/certificate-management/certificate-bundle{
                    # auth_basic           "closed site";
                    # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/certificate-management/certificate-bundle;
        }
        location  = /v1/sddcs/appliance-info{
                    # auth_basic           "closed site";
                    # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/system/appliance-info;
        }
        location  = /v1/sddcs/installer-mode{
                    # auth_basic           "closed site";
                    # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7200/domainmanager/v1/sddcs/installer-mode;
        }
        location ~ ^/v1/system/credentials(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7100/v1/system/credentials$1$is_args$args;
        }
        # AVN API's
        location ~ ^/v1/avns(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7200/domainmanager/v1/avns$1$is_args$args;
        }
        #Tags
        location ~ ^/v1/(domains|hosts|clusters)/([a-zA-Z0-9\-]+)/tags(.*) {
            proxy_pass http://127.0.0.1:7100/v1/tags/resources/$1/$2$3$is_args$args;
        }
        location ~ ^/v1/(domains|hosts|clusters)/tags(.*) {
            proxy_pass http://127.0.0.1:7100/v1/tags/resources/$1$2$is_args$args;
        }
        location ~ ^/v1/tags(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/tags$1$is_args$args;
        }

        # Events APIs
        location ~ ^/v1/events(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/events$1$is_args$args;
        }

        # SOS V1 Public APIs
        # Options sendfile, tcp_nopush used to reduce network overhead
        # Option sendfile_max_chunk to limit the amount of data transferred and improve performance
        location ~ ^/v1/system/(support-bundles|health-summary)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            sendfile            on;
            sendfile_max_chunk          1m;
            tcp_nopush on;
            proxy_pass http://127.0.0.1:7600/v1/$1$2$is_args$args;
        }
        # certificate management v1 public APIs
        location ~ ^/v1/domains/([a-zA-Z0-9\-]+/)(certificates|csrs|resource-certificates|renew)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/domains/$1$2$3$is_args$args;
        }
        location ~ ^/v1/domains/resource-certificates(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7300/operationsmanager$request_uri;
        }
        # policy management v1 public APIs
        location ~ ^/v1/domains/([a-zA-Z0-9\-]+/)(policy)(.*) {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/domains/$1$2$3$is_args$args;
        }
        location ~ ^/v1/domains/([a-zA-Z0-9\-]+)/health-checks(.*) {
            proxy_pass http://127.0.0.1:7400/v1/domains/$1/health-checks$2$is_args$args;
        }

        # domainmanager v1 public APIs
        location  ~ ^/v1/(domains|clusters|vrslcms|vcf-management-components|load-balancers|deployment-endpoint|nsx-alb-clusters|alb-clusters|edge-clusters|wcps|validation|nsxt-clusters|nsx-cluster|nsx-version|vasa-providers|config-drifts|config-drift-reconciliations|sddcs|installer)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7200/domainmanager/v1/$1$2$is_args$args;
        }
        # operationsmanager v1 public APIs
        location  ~ ^/v1/(backups|certificate-authorities|credentials|hosts|license-keys|notifications|policies|ra|server-certificates|service-accounts)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/$1$2$is_args$args;
        }
        # defining this separately as the resource 'system' in the url is shared with lcm public APIs
        location = /v1/system/backup-configuration  {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/backup-configuration;
        }
        location ~ ^/v1/system/backup-configuration/(validations|backup-locations)(.*)  {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/backup-configuration/$1$2$is_args$args;
        }
        # ntp-configuration v1 public APIs
        location ~ ^/v1/system/ntp-configuration(.*)  {
           # auth_basic           "closed site";
           # auth_basic_user_file /etc/nginx/.htpasswd;

           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/ntp-configuration$1$is_args$args;
        }

        # dns-configuration v1 public APIs
        location ~ ^/v1/system/dns-configuration(.*)  {
           # auth_basic           "closed site";
           # auth_basic_user_file /etc/nginx/.htpasswd;
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/dns-configuration$1$is_args$args;
        }

        # vPAIF configuration v1 public APIs
        location ~ ^/v1/system/vpaif-configuration(.*)  {
           # auth_basic           "closed site";
           # auth_basic_user_file /etc/nginx/.htpasswd;

           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/vpaif-configuration$1$is_args$args;
        }

        # vPAIF task publisher v1 public APIs
        location ~ ^/v1/system/vpaif/task-publisher(.*)  {
           # auth_basic           "closed site";
           # auth_basic_user_file /etc/nginx/.htpasswd;

           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/vpaif/task-publisher$1$is_args$args;
        }

        # Supervisor configuration v1 public APIs
        location ~ ^/v1/system/supervisor-configuration(.*)  {
           # auth_basic           "closed site";
           # auth_basic_user_file /etc/nginx/.htpasswd;

           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/supervisor-configuration$1$is_args$args;
        }

        # version-syncs v1 public APIs
        location ~ ^/v1/resources/version-syncs(.*)  {
           # auth_basic           "closed site";
           # auth_basic_user_file /etc/nginx/.htpasswd;
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/resources/version-syncs$1$is_args$args;
        }

        # licensing-infos v1 public APIs
        location ~ ^/v1/resources/licensing-infos(.*)  {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/resources/licensing-infos$1$is_args$args;
        }

        # license-checks v1 public APIs
        location ~ ^/v1/resources/license-checks(.*)  {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/resources/license-checks$1$is_args$args;
        }

        # licensing-info v1 public APIs
        location ~ ^/v1/licensing-info(.*)  {
           # auth_basic           "closed site";
           # auth_basic_user_file /etc/nginx/.htpasswd;
           proxy_pass http://127.0.0.1:7300/operationsmanager/v1/licensing-info$1$is_args$args;
        }

        # FIPS status v1 public APIs
        location = /v1/system/security/fips  {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7100/v1/system/security/fips;
        }

        # Proxy configuration v1 public APIs
        location ~ ^/v1/system/proxy-configuration(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/system/proxy-configuration$1$2$is_args$args;
        }

        location ~ ^/v1/personalities/files(.*) {
           # auth_basic           "closed site";
           # auth_basic_user_file /etc/nginx/.htpasswd;

           client_max_body_size 2g;
           proxy_read_timeout   600;
           proxy_connect_timeout   600;
           proxy_send_timeout   600;

           limit_conn per_ip 1;
           limit_req zone=ui_file_upload;

           proxy_pass http://127.0.0.1:7400/v1/personalities/files$is_args$args;
        }

        location ~ ^/v1/vsan-hcl/content {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            client_max_body_size 40M;
            limit_conn per_ip 1;

            proxy_pass http://127.0.0.1:7400/v1/vsan-hcl/content/$is_args$args;
        }
        location ~ ^/v1/vsan-hcl/file {
            proxy_read_timeout   600;
            proxy_connect_timeout   600;
            proxy_send_timeout   600;
            client_max_body_size 40M;
            limit_conn per_ip 1;

            proxy_pass http://127.0.0.1:7400/v1/vsan-hcl/file/$is_args$args;
        }
        location ~ ^/v1/custom-isos/file(.*) {
            client_max_body_size 1g; # This is an editable field, but make sure to set the max size to what is needed
            proxy_pass http://127.0.0.1:7400/v1/custom-isos/file$is_args$args;
        }

        location ~ ^/v1/compatibility-matrices(.*) {
            client_max_body_size 1g; # This is an editable field, but make sure to set the max size to what is needed
            proxy_pass http://127.0.0.1:7400/v1/compatibility-matrices$1$is_args$args;
        }

        # System v1 public API. Preserve the order w.r.t. lcm v1 public APIs
        location = /v1/system {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7100/v1/system;
        }

        # lcm v1 public APIs
        location  ~ ^/v1/(bundles|product-binaries|upgradables|upgrades|system|personalities|product-version-catalog|product-version-catalogs|manifests|releases|custom-isos|vsan-hcl|cluster-images|compliant-versions|system-images|hosts/third-party-vibs)(.*) {
            # auth_basic           "closed site";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_max_temp_file_size 0;
            proxy_pass http://127.0.0.1:7400/v1/$1$2$is_args$args;
        }

        # to trigger restores, the public api v1 is defined in operationsmanager
        # and the get api to get the progress is defined in sos
        location  ~ ^/v1/(restores)(.*) {
            #auth_basic           "closed site";
            #auth_basic_user_file /etc/nginx/.htpasswd;

            if ($request_method = POST ) {
              proxy_pass http://127.0.0.1:7300/operationsmanager/v1/$1$2$is_args$args;
            }

             if ($request_method = GET ) {
              proxy_pass http://127.0.0.1:7600/v1/$1$2$is_args$args;
            }
        }

        # Internal SDDC APIs
        location ~ ^/v1/sddc(.*) {
            #auth_basic           "closed site";
            #auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:7200/domainmanager/v1/sddc$1$is_args$args;
        }

        # Internal assessment lambda APIs
        location ~ ^/v1/assessment/lambda(.*) {
            proxy_pass http://127.0.0.1:7300/operationsmanager/v1/assessment/lambda$1$is_args$args;
        }

        ### BASIC_AUTH_START ###

        ### BASIC_AUTH_END ###
    }
}
