control 'VCFM-9X-000065' do
  title 'The VMware Cloud Foundation vCenter VAMI Lighttpd service must disable directory listing.'
  desc  "
    The goal is to completely control the web user's experience in navigating any portion of the web document root directories.

    Enumeration techniques, such as URL parameter manipulation, rely upon being able to obtain information about the web server's directory structure by locating directories without default pages. In the scenario, the web server will display to the user a listing of the files in the directory being accessed. By disabling directory listings, the anonymous web user will not obtain directory browsing information or an error message that reveals the server type and version.
  "
  desc  'rationale', ''
  desc  'check', "
    At the command prompt, run the following:

    # /usr/sbin/lighttpd -p -f /etc/lighttpd/lighttpd.conf 2>/dev/null|awk '/server\\.modules/,/\\)/'

    If the output indicates the \"mod_dirlisting\" module is loaded, this is a finding.

    Note: The command must be run from a bash shell and not from a shell generated by the \"appliance shell\". Use the \"chsh\" command to change the shell for the account to \"/bin/bash\". Refer to KB Article 2100508 for more details:

    https://knowledge.broadcom.com/external/article?legacyId=2100508
  "
  desc 'fix', "
    Navigate to and open:

    /etc/lighttpd/modules.conf

    Delete or comment out the \"mod_dirlisting\" line.

    Note: The line may be in an included config and not in the parent config itself.

    Restart the service with the following command:

    # systemctl restart lighttpd
  "
  impact 0.5
  tag severity: 'medium'
  tag gtitle: 'SRG-APP-000266-WSR-000142'
  tag gid: 'V-VCFM-9X-000065'
  tag rid: 'SV-VCFM-9X-000065'
  tag stig_id: 'VCFM-9X-000065'
  tag cci: ['CCI-001312']
  tag nist: ['SI-11 a']

  modules = command("#{input('lighttpdBin')} -p -f #{input('lighttpdConf')} 2>/dev/null|awk '/server\\.modules/,/\\)/'|sed -e 's/^[ ]*//'|grep mod_").stdout
  if !modules.empty?
    modules.split.each do |result|
      describe result do
        it { should_not match /mod_dirlisting/ }
      end
    end
  else
    describe 'No modules found...skipping.' do
      skip 'No modules found...skipping.'
    end
  end
end
